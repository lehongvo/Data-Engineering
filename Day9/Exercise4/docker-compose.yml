version: '3'
services:
  zookeeper:
    image: bitnami/zookeeper:3.8
    ports:
      - "22181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - kafka-connect-network

  kafka:
    image: bitnami/kafka:3.4
    ports:
      - "29092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - kafka-connect-network

  kafka-connect:
    image: bitnami/kafka:3.4
    ports:
      - "28083:8083"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_HEAP_OPTS=-Xms512m -Xmx512m
    depends_on:
      - kafka
      - postgres
      - mongodb
    volumes:
      - ./connect-config:/opt/bitnami/kafka/config/connect
    command: >
      bash -c '
        echo "Starting Kafka Connect with built-in connectors..."
        /opt/bitnami/kafka/bin/connect-standalone.sh /opt/bitnami/kafka/config/connect/connect-standalone.properties /opt/bitnami/kafka/config/connect/postgres-source.properties /opt/bitnami/kafka/config/connect/mongodb-sink.properties
      '
    networks:
      - kafka-connect-network

  postgres:
    image: postgres:14
    ports:
      - "25432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=kafkaconnect
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    networks:
      - kafka-connect-network

  mongodb:
    image: mongo:5
    ports:
      - "27018:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=example
    volumes:
      - mongodb-data:/data/db
    networks:
      - kafka-connect-network

networks:
  kafka-connect-network:
    driver: bridge

volumes:
  postgres-data:
  mongodb-data: 