schema-registry-1  | ===> User
schema-registry-1  | uid=1000(appuser) gid=1000(appuser) groups=1000(appuser)
schema-registry-1  | ===> Configuring ...
schema-registry-1  | ===> Running preflight checks ... 
schema-registry-1  | ===> Check if Kafka is healthy ...
schema-registry-1  | [2025-05-11 15:40:33,347] INFO AdminClientConfig values: 
schema-registry-1  | 	auto.include.jmx.reporter = true
schema-registry-1  | 	bootstrap.servers = [PLAINTEXT://kafka:9092]
schema-registry-1  | 	client.dns.lookup = use_all_dns_ips
schema-registry-1  | 	client.id = 
schema-registry-1  | 	connections.max.idle.ms = 300000
schema-registry-1  | 	default.api.timeout.ms = 60000
schema-registry-1  | 	metadata.max.age.ms = 300000
schema-registry-1  | 	metric.reporters = []
schema-registry-1  | 	metrics.num.samples = 2
schema-registry-1  | 	metrics.recording.level = INFO
schema-registry-1  | 	metrics.sample.window.ms = 30000
schema-registry-1  | 	receive.buffer.bytes = 65536
schema-registry-1  | 	reconnect.backoff.max.ms = 1000
schema-registry-1  | 	reconnect.backoff.ms = 50
schema-registry-1  | 	request.timeout.ms = 30000
schema-registry-1  | 	retries = 2147483647
schema-registry-1  | 	retry.backoff.ms = 100
schema-registry-1  | 	sasl.client.callback.handler.class = null
schema-registry-1  | 	sasl.jaas.config = null
schema-registry-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
schema-registry-1  | 	sasl.kerberos.min.time.before.relogin = 60000
schema-registry-1  | 	sasl.kerberos.service.name = null
schema-registry-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
schema-registry-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
schema-registry-1  | 	sasl.login.callback.handler.class = null
schema-registry-1  | 	sasl.login.class = null
schema-registry-1  | 	sasl.login.connect.timeout.ms = null
schema-registry-1  | 	sasl.login.read.timeout.ms = null
schema-registry-1  | 	sasl.login.refresh.buffer.seconds = 300
schema-registry-1  | 	sasl.login.refresh.min.period.seconds = 60
schema-registry-1  | 	sasl.login.refresh.window.factor = 0.8
schema-registry-1  | 	sasl.login.refresh.window.jitter = 0.05
schema-registry-1  | 	sasl.login.retry.backoff.max.ms = 10000
schema-registry-1  | 	sasl.login.retry.backoff.ms = 100
schema-registry-1  | 	sasl.mechanism = GSSAPI
schema-registry-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
schema-registry-1  | 	sasl.oauthbearer.expected.audience = null
schema-registry-1  | 	sasl.oauthbearer.expected.issuer = null
schema-registry-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
schema-registry-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
schema-registry-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
schema-registry-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
schema-registry-1  | 	sasl.oauthbearer.scope.claim.name = scope
schema-registry-1  | 	sasl.oauthbearer.sub.claim.name = sub
schema-registry-1  | 	sasl.oauthbearer.token.endpoint.url = null
schema-registry-1  | 	security.protocol = PLAINTEXT
schema-registry-1  | 	security.providers = null
schema-registry-1  | 	send.buffer.bytes = 131072
schema-registry-1  | 	socket.connection.setup.timeout.max.ms = 30000
schema-registry-1  | 	socket.connection.setup.timeout.ms = 10000
schema-registry-1  | 	ssl.cipher.suites = null
schema-registry-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
schema-registry-1  | 	ssl.endpoint.identification.algorithm = https
schema-registry-1  | 	ssl.engine.factory.class = null
schema-registry-1  | 	ssl.key.password = null
schema-registry-1  | 	ssl.keymanager.algorithm = SunX509
schema-registry-1  | 	ssl.keystore.certificate.chain = null
schema-registry-1  | 	ssl.keystore.key = null
schema-registry-1  | 	ssl.keystore.location = null
schema-registry-1  | 	ssl.keystore.password = null
schema-registry-1  | 	ssl.keystore.type = JKS
schema-registry-1  | 	ssl.protocol = TLSv1.3
schema-registry-1  | 	ssl.provider = null
schema-registry-1  | 	ssl.secure.random.implementation = null
schema-registry-1  | 	ssl.trustmanager.algorithm = PKIX
schema-registry-1  | 	ssl.truststore.certificates = null
schema-registry-1  | 	ssl.truststore.location = null
schema-registry-1  | 	ssl.truststore.password = null
schema-registry-1  | 	ssl.truststore.type = JKS
schema-registry-1  |  (org.apache.kafka.clients.admin.AdminClientConfig)
schema-registry-1  | [2025-05-11 15:40:33,458] INFO Kafka version: 7.4.0-ccs (org.apache.kafka.common.utils.AppInfoParser)
schema-registry-1  | [2025-05-11 15:40:33,458] INFO Kafka commitId: 30969fa33c185e88 (org.apache.kafka.common.utils.AppInfoParser)
schema-registry-1  | [2025-05-11 15:40:33,458] INFO Kafka startTimeMs: 1746978033456 (org.apache.kafka.common.utils.AppInfoParser)
schema-registry-1  | Using log4j config /etc/schema-registry/log4j.properties
schema-registry-1  | ===> Launching ... 
schema-registry-1  | ===> Launching schema-registry ... 
schema-registry-1  | [2025-05-11 15:40:34,491] INFO SchemaRegistryConfig values: 
schema-registry-1  | 	access.control.allow.headers = 
schema-registry-1  | 	access.control.allow.methods = 
schema-registry-1  | 	access.control.allow.origin = 
schema-registry-1  | 	access.control.skip.options = true
schema-registry-1  | 	authentication.method = NONE
schema-registry-1  | 	authentication.realm = 
schema-registry-1  | 	authentication.roles = [*]
schema-registry-1  | 	authentication.skip.paths = []
schema-registry-1  | 	avro.compatibility.level = 
schema-registry-1  | 	compression.enable = true
schema-registry-1  | 	connector.connection.limit = 0
schema-registry-1  | 	csrf.prevention.enable = false
schema-registry-1  | 	csrf.prevention.token.endpoint = /csrf
schema-registry-1  | 	csrf.prevention.token.expiration.minutes = 30
schema-registry-1  | 	csrf.prevention.token.max.entries = 10000
schema-registry-1  | 	debug = false
schema-registry-1  | 	dos.filter.delay.ms = 100
schema-registry-1  | 	dos.filter.enabled = false
schema-registry-1  | 	dos.filter.insert.headers = true
schema-registry-1  | 	dos.filter.ip.whitelist = []
schema-registry-1  | 	dos.filter.managed.attr = false
schema-registry-1  | 	dos.filter.max.idle.tracker.ms = 30000
schema-registry-1  | 	dos.filter.max.requests.ms = 30000
schema-registry-1  | 	dos.filter.max.requests.per.connection.per.sec = 25
schema-registry-1  | 	dos.filter.max.requests.per.sec = 25
schema-registry-1  | 	dos.filter.max.wait.ms = 50
schema-registry-1  | 	dos.filter.throttle.ms = 30000
schema-registry-1  | 	dos.filter.throttled.requests = 5
schema-registry-1  | 	host.name = schema-registry
schema-registry-1  | 	http2.enabled = true
schema-registry-1  | 	idle.timeout.ms = 30000
schema-registry-1  | 	inter.instance.headers.whitelist = []
schema-registry-1  | 	inter.instance.listener.name = 
schema-registry-1  | 	inter.instance.protocol = http
schema-registry-1  | 	kafkagroup.heartbeat.interval.ms = 3000
schema-registry-1  | 	kafkagroup.rebalance.timeout.ms = 300000
schema-registry-1  | 	kafkagroup.session.timeout.ms = 10000
schema-registry-1  | 	kafkastore.bootstrap.servers = [PLAINTEXT://kafka:9092]
schema-registry-1  | 	kafkastore.checkpoint.dir = /tmp
schema-registry-1  | 	kafkastore.checkpoint.version = 0
schema-registry-1  | 	kafkastore.connection.url = 
schema-registry-1  | 	kafkastore.group.id = 
schema-registry-1  | 	kafkastore.init.timeout.ms = 60000
schema-registry-1  | 	kafkastore.sasl.kerberos.kinit.cmd = /usr/bin/kinit
schema-registry-1  | 	kafkastore.sasl.kerberos.min.time.before.relogin = 60000
schema-registry-1  | 	kafkastore.sasl.kerberos.service.name = 
schema-registry-1  | 	kafkastore.sasl.kerberos.ticket.renew.jitter = 0.05
schema-registry-1  | 	kafkastore.sasl.kerberos.ticket.renew.window.factor = 0.8
schema-registry-1  | 	kafkastore.sasl.mechanism = GSSAPI
schema-registry-1  | 	kafkastore.security.protocol = PLAINTEXT
schema-registry-1  | 	kafkastore.ssl.cipher.suites = 
schema-registry-1  | 	kafkastore.ssl.enabled.protocols = TLSv1.2,TLSv1.1,TLSv1
schema-registry-1  | 	kafkastore.ssl.endpoint.identification.algorithm = 
schema-registry-1  | 	kafkastore.ssl.key.password = [hidden]
schema-registry-1  | 	kafkastore.ssl.keymanager.algorithm = SunX509
schema-registry-1  | 	kafkastore.ssl.keystore.location = 
schema-registry-1  | 	kafkastore.ssl.keystore.password = [hidden]
schema-registry-1  | 	kafkastore.ssl.keystore.type = JKS
schema-registry-1  | 	kafkastore.ssl.protocol = TLS
schema-registry-1  | 	kafkastore.ssl.provider = 
schema-registry-1  | 	kafkastore.ssl.trustmanager.algorithm = PKIX
schema-registry-1  | 	kafkastore.ssl.truststore.location = 
schema-registry-1  | 	kafkastore.ssl.truststore.password = [hidden]
schema-registry-1  | 	kafkastore.ssl.truststore.type = JKS
schema-registry-1  | 	kafkastore.timeout.ms = 500
schema-registry-1  | 	kafkastore.topic = _schemas
schema-registry-1  | 	kafkastore.topic.replication.factor = 3
schema-registry-1  | 	kafkastore.topic.skip.validation = false
schema-registry-1  | 	kafkastore.update.handlers = []
schema-registry-1  | 	kafkastore.write.max.retries = 5
schema-registry-1  | 	leader.connect.timeout.ms = 60000
schema-registry-1  | 	leader.election.delay = false
schema-registry-1  | 	leader.eligibility = true
schema-registry-1  | 	leader.read.timeout.ms = 60000
schema-registry-1  | 	listener.protocol.map = []
schema-registry-1  | 	listeners = [http://0.0.0.0:8081]
schema-registry-1  | 	master.eligibility = null
schema-registry-1  | 	metadata.encoder.old.secret = null
schema-registry-1  | 	metadata.encoder.secret = null
schema-registry-1  | 	metadata.encoder.topic = _schema_encoders
schema-registry-1  | 	metric.reporters = []
schema-registry-1  | 	metrics.jmx.prefix = kafka.schema.registry
schema-registry-1  | 	metrics.num.samples = 2
schema-registry-1  | 	metrics.sample.window.ms = 30000
schema-registry-1  | 	metrics.tag.map = []
schema-registry-1  | 	mode.mutability = true
schema-registry-1  | 	nosniff.prevention.enable = false
schema-registry-1  | 	port = 8081
schema-registry-1  | 	proxy.protocol.enabled = false
schema-registry-1  | 	reject.options.request = false
schema-registry-1  | 	request.logger.name = io.confluent.rest-utils.requests
schema-registry-1  | 	request.queue.capacity = 2147483647
schema-registry-1  | 	request.queue.capacity.growby = 64
schema-registry-1  | 	request.queue.capacity.init = 128
schema-registry-1  | 	resource.extension.class = []
schema-registry-1  | 	resource.extension.classes = []
schema-registry-1  | 	resource.static.locations = []
schema-registry-1  | 	response.http.headers.config = 
schema-registry-1  | 	response.mediatype.default = application/vnd.schemaregistry.v1+json
schema-registry-1  | 	response.mediatype.preferred = [application/vnd.schemaregistry.v1+json, application/vnd.schemaregistry+json, application/json]
schema-registry-1  | 	rest.servlet.initializor.classes = []
schema-registry-1  | 	schema.cache.expiry.secs = 300
schema-registry-1  | 	schema.cache.size = 1000
schema-registry-1  | 	schema.canonicalize.on.consume = []
schema-registry-1  | 	schema.compatibility.level = backward
schema-registry-1  | 	schema.providers = []
schema-registry-1  | 	schema.registry.group.id = schema-registry
schema-registry-1  | 	schema.registry.inter.instance.protocol = 
schema-registry-1  | 	schema.registry.resource.extension.class = []
schema-registry-1  | 	server.connection.limit = 0
schema-registry-1  | 	shutdown.graceful.ms = 1000
schema-registry-1  | 	ssl.cipher.suites = []
schema-registry-1  | 	ssl.client.auth = false
schema-registry-1  | 	ssl.client.authentication = NONE
schema-registry-1  | 	ssl.enabled.protocols = []
schema-registry-1  | 	ssl.endpoint.identification.algorithm = null
schema-registry-1  | 	ssl.key.password = [hidden]
schema-registry-1  | 	ssl.keymanager.algorithm = 
schema-registry-1  | 	ssl.keystore.location = 
schema-registry-1  | 	ssl.keystore.password = [hidden]
schema-registry-1  | 	ssl.keystore.reload = false
schema-registry-1  | 	ssl.keystore.type = JKS
schema-registry-1  | 	ssl.keystore.watch.location = 
schema-registry-1  | 	ssl.protocol = TLS
schema-registry-1  | 	ssl.provider = 
schema-registry-1  | 	ssl.trustmanager.algorithm = 
schema-registry-1  | 	ssl.truststore.location = 
schema-registry-1  | 	ssl.truststore.password = [hidden]
schema-registry-1  | 	ssl.truststore.type = JKS
schema-registry-1  | 	suppress.stack.trace.response = true
schema-registry-1  | 	thread.pool.max = 200
schema-registry-1  | 	thread.pool.min = 8
schema-registry-1  | 	websocket.path.prefix = /ws
schema-registry-1  | 	websocket.servlet.initializor.classes = []
schema-registry-1  |  (io.confluent.kafka.schemaregistry.rest.SchemaRegistryConfig)
schema-registry-1  | [2025-05-11 15:40:34,517] INFO Logging initialized @411ms to org.eclipse.jetty.util.log.Slf4jLog (org.eclipse.jetty.util.log)
schema-registry-1  | [2025-05-11 15:40:34,533] INFO Initial capacity 128, increased by 64, maximum capacity 2147483647. (io.confluent.rest.ApplicationServer)
schema-registry-1  | [2025-05-11 15:40:34,592] INFO Adding listener with HTTP/2: NamedURI{uri=http://0.0.0.0:8081, name='null'} (io.confluent.rest.ApplicationServer)
schema-registry-1  | [2025-05-11 15:40:34,753] INFO Found internal listener: NamedURI{uri=http://0.0.0.0:8081, name='null'} (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
schema-registry-1  | [2025-05-11 15:40:34,754] INFO Setting my identity to version=1,host=schema-registry,port=8081,scheme=http,leaderEligibility=true (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
schema-registry-1  | [2025-05-11 15:40:34,828] INFO AdminClientConfig values: 
schema-registry-1  | 	auto.include.jmx.reporter = true
schema-registry-1  | 	bootstrap.servers = [PLAINTEXT://kafka:9092]
schema-registry-1  | 	client.dns.lookup = use_all_dns_ips
schema-registry-1  | 	client.id = 
schema-registry-1  | 	confluent.metrics.reporter.bootstrap.servers = kafka-0:9071
schema-registry-1  | 	confluent.proxy.protocol.client.address = null
schema-registry-1  | 	confluent.proxy.protocol.client.port = null
schema-registry-1  | 	confluent.proxy.protocol.client.version = NONE
schema-registry-1  | 	confluent.use.controller.listener = false
schema-registry-1  | 	connections.max.idle.ms = 300000
schema-registry-1  | 	default.api.timeout.ms = 60000
schema-registry-1  | 	host.resolver.class = class org.apache.kafka.clients.DefaultHostResolver
schema-registry-1  | 	metadata.max.age.ms = 300000
schema-registry-1  | 	metric.reporters = []
schema-registry-1  | 	metrics.num.samples = 2
schema-registry-1  | 	metrics.recording.level = INFO
schema-registry-1  | 	metrics.sample.window.ms = 30000
schema-registry-1  | 	receive.buffer.bytes = 65536
schema-registry-1  | 	reconnect.backoff.max.ms = 1000
schema-registry-1  | 	reconnect.backoff.ms = 50
schema-registry-1  | 	request.timeout.ms = 30000
schema-registry-1  | 	retries = 2147483647
schema-registry-1  | 	retry.backoff.ms = 100
schema-registry-1  | 	sasl.client.callback.handler.class = null
schema-registry-1  | 	sasl.jaas.config = null
schema-registry-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
schema-registry-1  | 	sasl.kerberos.min.time.before.relogin = 60000
schema-registry-1  | 	sasl.kerberos.service.name = null
schema-registry-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
schema-registry-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
schema-registry-1  | 	sasl.login.callback.handler.class = null
schema-registry-1  | 	sasl.login.class = null
schema-registry-1  | 	sasl.login.connect.timeout.ms = null
schema-registry-1  | 	sasl.login.read.timeout.ms = null
schema-registry-1  | 	sasl.login.refresh.buffer.seconds = 300
schema-registry-1  | 	sasl.login.refresh.min.period.seconds = 60
schema-registry-1  | 	sasl.login.refresh.window.factor = 0.8
schema-registry-1  | 	sasl.login.refresh.window.jitter = 0.05
schema-registry-1  | 	sasl.login.retry.backoff.max.ms = 10000
schema-registry-1  | 	sasl.login.retry.backoff.ms = 100
schema-registry-1  | 	sasl.mechanism = GSSAPI
schema-registry-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
schema-registry-1  | 	sasl.oauthbearer.expected.audience = null
schema-registry-1  | 	sasl.oauthbearer.expected.issuer = null
schema-registry-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
schema-registry-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
schema-registry-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
schema-registry-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
schema-registry-1  | 	sasl.oauthbearer.scope.claim.name = scope
schema-registry-1  | 	sasl.oauthbearer.sub.claim.name = sub
schema-registry-1  | 	sasl.oauthbearer.token.endpoint.url = null
schema-registry-1  | 	security.protocol = PLAINTEXT
schema-registry-1  | 	security.providers = null
schema-registry-1  | 	send.buffer.bytes = 131072
schema-registry-1  | 	socket.connection.setup.timeout.max.ms = 30000
schema-registry-1  | 	socket.connection.setup.timeout.ms = 10000
schema-registry-1  | 	ssl.cipher.suites = null
schema-registry-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
schema-registry-1  | 	ssl.endpoint.identification.algorithm = https
schema-registry-1  | 	ssl.engine.factory.class = null
schema-registry-1  | 	ssl.key.password = null
schema-registry-1  | 	ssl.keymanager.algorithm = SunX509
schema-registry-1  | 	ssl.keystore.certificate.chain = null
schema-registry-1  | 	ssl.keystore.key = null
schema-registry-1  | 	ssl.keystore.location = null
schema-registry-1  | 	ssl.keystore.password = null
schema-registry-1  | 	ssl.keystore.type = JKS
schema-registry-1  | 	ssl.protocol = TLSv1.3
schema-registry-1  | 	ssl.provider = null
schema-registry-1  | 	ssl.secure.random.implementation = null
schema-registry-1  | 	ssl.trustmanager.algorithm = PKIX
schema-registry-1  | 	ssl.truststore.certificates = null
schema-registry-1  | 	ssl.truststore.location = null
schema-registry-1  | 	ssl.truststore.password = null
schema-registry-1  | 	ssl.truststore.type = JKS
schema-registry-1  |  (org.apache.kafka.clients.admin.AdminClientConfig)
schema-registry-1  | [2025-05-11 15:40:34,868] INFO Kafka version: 7.4.0-ce (org.apache.kafka.common.utils.AppInfoParser)
schema-registry-1  | [2025-05-11 15:40:34,868] INFO Kafka commitId: aee97a585bd06866 (org.apache.kafka.common.utils.AppInfoParser)
schema-registry-1  | [2025-05-11 15:40:34,868] INFO Kafka startTimeMs: 1746978034867 (org.apache.kafka.common.utils.AppInfoParser)
schema-registry-1  | [2025-05-11 15:40:35,131] INFO App info kafka.admin.client for adminclient-1 unregistered (org.apache.kafka.common.utils.AppInfoParser)
schema-registry-1  | [2025-05-11 15:40:35,135] INFO Metrics scheduler closed (org.apache.kafka.common.metrics.Metrics)
schema-registry-1  | [2025-05-11 15:40:35,135] INFO Closing reporter org.apache.kafka.common.metrics.JmxReporter (org.apache.kafka.common.metrics.Metrics)
schema-registry-1  | [2025-05-11 15:40:35,135] INFO Metrics reporters closed (org.apache.kafka.common.metrics.Metrics)
schema-registry-1  | [2025-05-11 15:40:35,141] INFO Registering schema provider for AVRO: io.confluent.kafka.schemaregistry.avro.AvroSchemaProvider (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
schema-registry-1  | [2025-05-11 15:40:35,141] INFO Registering schema provider for JSON: io.confluent.kafka.schemaregistry.json.JsonSchemaProvider (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
schema-registry-1  | [2025-05-11 15:40:35,141] INFO Registering schema provider for PROTOBUF: io.confluent.kafka.schemaregistry.protobuf.ProtobufSchemaProvider (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
schema-registry-1  | [2025-05-11 15:40:35,161] INFO Initializing KafkaStore with broker endpoints: PLAINTEXT://kafka:9092 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
schema-registry-1  | [2025-05-11 15:40:35,236] WARN No value specified for metadata.encoder.secret, sensitive metadata will not be encoded (io.confluent.kafka.schemaregistry.storage.encoder.MetadataEncoderService)
schema-registry-1  | [2025-05-11 15:40:35,237] INFO AdminClientConfig values: 
schema-registry-1  | 	auto.include.jmx.reporter = true
schema-registry-1  | 	bootstrap.servers = [PLAINTEXT://kafka:9092]
schema-registry-1  | 	client.dns.lookup = use_all_dns_ips
schema-registry-1  | 	client.id = 
schema-registry-1  | 	confluent.metrics.reporter.bootstrap.servers = kafka-0:9071
schema-registry-1  | 	confluent.proxy.protocol.client.address = null
schema-registry-1  | 	confluent.proxy.protocol.client.port = null
schema-registry-1  | 	confluent.proxy.protocol.client.version = NONE
schema-registry-1  | 	confluent.use.controller.listener = false
schema-registry-1  | 	connections.max.idle.ms = 300000
schema-registry-1  | 	default.api.timeout.ms = 60000
schema-registry-1  | 	host.resolver.class = class org.apache.kafka.clients.DefaultHostResolver
schema-registry-1  | 	metadata.max.age.ms = 300000
schema-registry-1  | 	metric.reporters = []
schema-registry-1  | 	metrics.num.samples = 2
schema-registry-1  | 	metrics.recording.level = INFO
schema-registry-1  | 	metrics.sample.window.ms = 30000
schema-registry-1  | 	receive.buffer.bytes = 65536
schema-registry-1  | 	reconnect.backoff.max.ms = 1000
schema-registry-1  | 	reconnect.backoff.ms = 50
schema-registry-1  | 	request.timeout.ms = 30000
schema-registry-1  | 	retries = 2147483647
schema-registry-1  | 	retry.backoff.ms = 100
schema-registry-1  | 	sasl.client.callback.handler.class = null
schema-registry-1  | 	sasl.jaas.config = null
schema-registry-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
schema-registry-1  | 	sasl.kerberos.min.time.before.relogin = 60000
schema-registry-1  | 	sasl.kerberos.service.name = null
schema-registry-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
schema-registry-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
schema-registry-1  | 	sasl.login.callback.handler.class = null
schema-registry-1  | 	sasl.login.class = null
schema-registry-1  | 	sasl.login.connect.timeout.ms = null
schema-registry-1  | 	sasl.login.read.timeout.ms = null
schema-registry-1  | 	sasl.login.refresh.buffer.seconds = 300
schema-registry-1  | 	sasl.login.refresh.min.period.seconds = 60
schema-registry-1  | 	sasl.login.refresh.window.factor = 0.8
schema-registry-1  | 	sasl.login.refresh.window.jitter = 0.05
schema-registry-1  | 	sasl.login.retry.backoff.max.ms = 10000
schema-registry-1  | 	sasl.login.retry.backoff.ms = 100
schema-registry-1  | 	sasl.mechanism = GSSAPI
schema-registry-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
schema-registry-1  | 	sasl.oauthbearer.expected.audience = null
schema-registry-1  | 	sasl.oauthbearer.expected.issuer = null
schema-registry-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
schema-registry-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
schema-registry-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
schema-registry-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
schema-registry-1  | 	sasl.oauthbearer.scope.claim.name = scope
schema-registry-1  | 	sasl.oauthbearer.sub.claim.name = sub
schema-registry-1  | 	sasl.oauthbearer.token.endpoint.url = null
schema-registry-1  | 	security.protocol = PLAINTEXT
schema-registry-1  | 	security.providers = null
schema-registry-1  | 	send.buffer.bytes = 131072
schema-registry-1  | 	socket.connection.setup.timeout.max.ms = 30000
schema-registry-1  | 	socket.connection.setup.timeout.ms = 10000
schema-registry-1  | 	ssl.cipher.suites = null
schema-registry-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
schema-registry-1  | 	ssl.endpoint.identification.algorithm = https
schema-registry-1  | 	ssl.engine.factory.class = null
schema-registry-1  | 	ssl.key.password = null
schema-registry-1  | 	ssl.keymanager.algorithm = SunX509
schema-registry-1  | 	ssl.keystore.certificate.chain = null
schema-registry-1  | 	ssl.keystore.key = null
schema-registry-1  | 	ssl.keystore.location = null
schema-registry-1  | 	ssl.keystore.password = null
schema-registry-1  | 	ssl.keystore.type = JKS
schema-registry-1  | 	ssl.protocol = TLSv1.3
schema-registry-1  | 	ssl.provider = null
schema-registry-1  | 	ssl.secure.random.implementation = null
schema-registry-1  | 	ssl.trustmanager.algorithm = PKIX
schema-registry-1  | 	ssl.truststore.certificates = null
schema-registry-1  | 	ssl.truststore.location = null
schema-registry-1  | 	ssl.truststore.password = null
schema-registry-1  | 	ssl.truststore.type = JKS
schema-registry-1  |  (org.apache.kafka.clients.admin.AdminClientConfig)
schema-registry-1  | [2025-05-11 15:40:35,239] INFO Kafka version: 7.4.0-ce (org.apache.kafka.common.utils.AppInfoParser)
schema-registry-1  | [2025-05-11 15:40:35,239] INFO Kafka commitId: aee97a585bd06866 (org.apache.kafka.common.utils.AppInfoParser)
schema-registry-1  | [2025-05-11 15:40:35,239] INFO Kafka startTimeMs: 1746978035239 (org.apache.kafka.common.utils.AppInfoParser)
schema-registry-1  | [2025-05-11 15:40:35,247] INFO Creating schemas topic _schemas (io.confluent.kafka.schemaregistry.storage.KafkaStore)
schema-registry-1  | [2025-05-11 15:40:35,248] WARN Creating the schema topic _schemas using a replication factor of 1, which is less than the desired one of 3. If this is a production environment, it's crucial to add more brokers and increase the replication factor of the topic. (io.confluent.kafka.schemaregistry.storage.KafkaStore)
schema-registry-1  | [2025-05-11 15:40:35,296] INFO App info kafka.admin.client for adminclient-2 unregistered (org.apache.kafka.common.utils.AppInfoParser)
schema-registry-1  | [2025-05-11 15:40:35,297] INFO Metrics scheduler closed (org.apache.kafka.common.metrics.Metrics)
schema-registry-1  | [2025-05-11 15:40:35,297] INFO Closing reporter org.apache.kafka.common.metrics.JmxReporter (org.apache.kafka.common.metrics.Metrics)
schema-registry-1  | [2025-05-11 15:40:35,297] INFO Metrics reporters closed (org.apache.kafka.common.metrics.Metrics)
schema-registry-1  | [2025-05-11 15:40:35,305] INFO ProducerConfig values: 
schema-registry-1  | 	acks = -1
schema-registry-1  | 	auto.include.jmx.reporter = true
schema-registry-1  | 	batch.size = 16384
schema-registry-1  | 	bootstrap.servers = [PLAINTEXT://kafka:9092]
schema-registry-1  | 	buffer.memory = 33554432
schema-registry-1  | 	client.dns.lookup = use_all_dns_ips
schema-registry-1  | 	client.id = producer-1
schema-registry-1  | 	compression.type = none
schema-registry-1  | 	confluent.proxy.protocol.client.address = null
schema-registry-1  | 	confluent.proxy.protocol.client.port = null
schema-registry-1  | 	confluent.proxy.protocol.client.version = NONE
schema-registry-1  | 	connections.max.idle.ms = 540000
schema-registry-1  | 	delivery.timeout.ms = 120000
schema-registry-1  | 	enable.idempotence = false
schema-registry-1  | 	interceptor.classes = []
schema-registry-1  | 	key.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
schema-registry-1  | 	linger.ms = 0
schema-registry-1  | 	max.block.ms = 60000
schema-registry-1  | 	max.in.flight.requests.per.connection = 5
schema-registry-1  | 	max.request.size = 1048576
schema-registry-1  | 	metadata.max.age.ms = 300000
schema-registry-1  | 	metadata.max.idle.ms = 300000
schema-registry-1  | 	metric.reporters = []
schema-registry-1  | 	metrics.num.samples = 2
schema-registry-1  | 	metrics.recording.level = INFO
schema-registry-1  | 	metrics.sample.window.ms = 30000
schema-registry-1  | 	partitioner.adaptive.partitioning.enable = true
schema-registry-1  | 	partitioner.availability.timeout.ms = 0
schema-registry-1  | 	partitioner.class = null
schema-registry-1  | 	partitioner.ignore.keys = false
schema-registry-1  | 	receive.buffer.bytes = 32768
schema-registry-1  | 	reconnect.backoff.max.ms = 1000
schema-registry-1  | 	reconnect.backoff.ms = 50
schema-registry-1  | 	request.timeout.ms = 30000
schema-registry-1  | 	retries = 0
schema-registry-1  | 	retry.backoff.ms = 100
schema-registry-1  | 	sasl.client.callback.handler.class = null
schema-registry-1  | 	sasl.jaas.config = null
schema-registry-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
schema-registry-1  | 	sasl.kerberos.min.time.before.relogin = 60000
schema-registry-1  | 	sasl.kerberos.service.name = null
schema-registry-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
schema-registry-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
schema-registry-1  | 	sasl.login.callback.handler.class = null
schema-registry-1  | 	sasl.login.class = null
schema-registry-1  | 	sasl.login.connect.timeout.ms = null
schema-registry-1  | 	sasl.login.read.timeout.ms = null
schema-registry-1  | 	sasl.login.refresh.buffer.seconds = 300
schema-registry-1  | 	sasl.login.refresh.min.period.seconds = 60
schema-registry-1  | 	sasl.login.refresh.window.factor = 0.8
schema-registry-1  | 	sasl.login.refresh.window.jitter = 0.05
schema-registry-1  | 	sasl.login.retry.backoff.max.ms = 10000
schema-registry-1  | 	sasl.login.retry.backoff.ms = 100
schema-registry-1  | 	sasl.mechanism = GSSAPI
schema-registry-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
schema-registry-1  | 	sasl.oauthbearer.expected.audience = null
schema-registry-1  | 	sasl.oauthbearer.expected.issuer = null
schema-registry-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
schema-registry-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
schema-registry-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
schema-registry-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
schema-registry-1  | 	sasl.oauthbearer.scope.claim.name = scope
schema-registry-1  | 	sasl.oauthbearer.sub.claim.name = sub
schema-registry-1  | 	sasl.oauthbearer.token.endpoint.url = null
schema-registry-1  | 	security.protocol = PLAINTEXT
schema-registry-1  | 	security.providers = null
schema-registry-1  | 	send.buffer.bytes = 131072
schema-registry-1  | 	socket.connection.setup.timeout.max.ms = 30000
schema-registry-1  | 	socket.connection.setup.timeout.ms = 10000
schema-registry-1  | 	ssl.cipher.suites = null
schema-registry-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
schema-registry-1  | 	ssl.endpoint.identification.algorithm = https
schema-registry-1  | 	ssl.engine.factory.class = null
schema-registry-1  | 	ssl.key.password = null
schema-registry-1  | 	ssl.keymanager.algorithm = SunX509
schema-registry-1  | 	ssl.keystore.certificate.chain = null
schema-registry-1  | 	ssl.keystore.key = null
schema-registry-1  | 	ssl.keystore.location = null
schema-registry-1  | 	ssl.keystore.password = null
schema-registry-1  | 	ssl.keystore.type = JKS
schema-registry-1  | 	ssl.protocol = TLSv1.3
schema-registry-1  | 	ssl.provider = null
schema-registry-1  | 	ssl.secure.random.implementation = null
schema-registry-1  | 	ssl.trustmanager.algorithm = PKIX
schema-registry-1  | 	ssl.truststore.certificates = null
schema-registry-1  | 	ssl.truststore.location = null
schema-registry-1  | 	ssl.truststore.password = null
schema-registry-1  | 	ssl.truststore.type = JKS
schema-registry-1  | 	transaction.timeout.ms = 60000
schema-registry-1  | 	transactional.id = null
schema-registry-1  | 	value.serializer = class org.apache.kafka.common.serialization.ByteArraySerializer
schema-registry-1  |  (org.apache.kafka.clients.producer.ProducerConfig)
schema-registry-1  | [2025-05-11 15:40:35,316] INFO Kafka version: 7.4.0-ce (org.apache.kafka.common.utils.AppInfoParser)
schema-registry-1  | [2025-05-11 15:40:35,316] INFO Kafka commitId: aee97a585bd06866 (org.apache.kafka.common.utils.AppInfoParser)
schema-registry-1  | [2025-05-11 15:40:35,316] INFO Kafka startTimeMs: 1746978035316 (org.apache.kafka.common.utils.AppInfoParser)
schema-registry-1  | [2025-05-11 15:40:35,322] INFO [Producer clientId=producer-1] Cluster ID: xZizC8z6SJWtwCsWVDlToA (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,330] INFO Registered kafka:type=kafka.Log4jController MBean (kafka.utils.Log4jControllerRegistration$)
schema-registry-1  | [2025-05-11 15:40:35,330] INFO Kafka store reader thread starting consumer (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
schema-registry-1  | [2025-05-11 15:40:35,335] INFO ConsumerConfig values: 
schema-registry-1  | 	allow.auto.create.topics = true
schema-registry-1  | 	auto.commit.interval.ms = 5000
schema-registry-1  | 	auto.include.jmx.reporter = true
schema-registry-1  | 	auto.offset.reset = earliest
schema-registry-1  | 	bootstrap.servers = [PLAINTEXT://kafka:9092]
schema-registry-1  | 	check.crcs = true
schema-registry-1  | 	client.dns.lookup = use_all_dns_ips
schema-registry-1  | 	client.id = KafkaStore-reader-_schemas
schema-registry-1  | 	client.rack = 
schema-registry-1  | 	confluent.proxy.protocol.client.address = null
schema-registry-1  | 	confluent.proxy.protocol.client.port = null
schema-registry-1  | 	confluent.proxy.protocol.client.version = NONE
schema-registry-1  | 	connections.max.idle.ms = 540000
schema-registry-1  | 	default.api.timeout.ms = 60000
schema-registry-1  | 	enable.auto.commit = false
schema-registry-1  | 	exclude.internal.topics = true
schema-registry-1  | 	fetch.max.bytes = 52428800
schema-registry-1  | 	fetch.max.wait.ms = 500
schema-registry-1  | 	fetch.min.bytes = 1
schema-registry-1  | 	group.id = schema-registry-schema-registry-8081
schema-registry-1  | 	group.instance.id = null
schema-registry-1  | 	heartbeat.interval.ms = 3000
schema-registry-1  | 	interceptor.classes = []
schema-registry-1  | 	internal.leave.group.on.close = true
schema-registry-1  | 	internal.throw.on.fetch.stable.offset.unsupported = false
schema-registry-1  | 	isolation.level = read_uncommitted
schema-registry-1  | 	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
schema-registry-1  | 	max.partition.fetch.bytes = 1048576
schema-registry-1  | 	max.poll.interval.ms = 300000
schema-registry-1  | 	max.poll.records = 500
schema-registry-1  | 	metadata.max.age.ms = 300000
schema-registry-1  | 	metric.reporters = []
schema-registry-1  | 	metrics.num.samples = 2
schema-registry-1  | 	metrics.recording.level = INFO
schema-registry-1  | 	metrics.sample.window.ms = 30000
schema-registry-1  | 	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
schema-registry-1  | 	receive.buffer.bytes = 65536
schema-registry-1  | 	reconnect.backoff.max.ms = 1000
schema-registry-1  | 	reconnect.backoff.ms = 50
schema-registry-1  | 	request.timeout.ms = 30000
schema-registry-1  | 	retry.backoff.ms = 100
schema-registry-1  | 	sasl.client.callback.handler.class = null
schema-registry-1  | 	sasl.jaas.config = null
schema-registry-1  | 	sasl.kerberos.kinit.cmd = /usr/bin/kinit
schema-registry-1  | 	sasl.kerberos.min.time.before.relogin = 60000
schema-registry-1  | 	sasl.kerberos.service.name = null
schema-registry-1  | 	sasl.kerberos.ticket.renew.jitter = 0.05
schema-registry-1  | 	sasl.kerberos.ticket.renew.window.factor = 0.8
schema-registry-1  | 	sasl.login.callback.handler.class = null
schema-registry-1  | 	sasl.login.class = null
schema-registry-1  | 	sasl.login.connect.timeout.ms = null
schema-registry-1  | 	sasl.login.read.timeout.ms = null
schema-registry-1  | 	sasl.login.refresh.buffer.seconds = 300
schema-registry-1  | 	sasl.login.refresh.min.period.seconds = 60
schema-registry-1  | 	sasl.login.refresh.window.factor = 0.8
schema-registry-1  | 	sasl.login.refresh.window.jitter = 0.05
schema-registry-1  | 	sasl.login.retry.backoff.max.ms = 10000
schema-registry-1  | 	sasl.login.retry.backoff.ms = 100
schema-registry-1  | 	sasl.mechanism = GSSAPI
schema-registry-1  | 	sasl.oauthbearer.clock.skew.seconds = 30
schema-registry-1  | 	sasl.oauthbearer.expected.audience = null
schema-registry-1  | 	sasl.oauthbearer.expected.issuer = null
schema-registry-1  | 	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
schema-registry-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
schema-registry-1  | 	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
schema-registry-1  | 	sasl.oauthbearer.jwks.endpoint.url = null
schema-registry-1  | 	sasl.oauthbearer.scope.claim.name = scope
schema-registry-1  | 	sasl.oauthbearer.sub.claim.name = sub
schema-registry-1  | 	sasl.oauthbearer.token.endpoint.url = null
schema-registry-1  | 	security.protocol = PLAINTEXT
schema-registry-1  | 	security.providers = null
schema-registry-1  | 	send.buffer.bytes = 131072
schema-registry-1  | 	session.timeout.ms = 45000
schema-registry-1  | 	socket.connection.setup.timeout.max.ms = 30000
schema-registry-1  | 	socket.connection.setup.timeout.ms = 10000
schema-registry-1  | 	ssl.cipher.suites = null
schema-registry-1  | 	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
schema-registry-1  | 	ssl.endpoint.identification.algorithm = https
schema-registry-1  | 	ssl.engine.factory.class = null
schema-registry-1  | 	ssl.key.password = null
schema-registry-1  | 	ssl.keymanager.algorithm = SunX509
schema-registry-1  | 	ssl.keystore.certificate.chain = null
schema-registry-1  | 	ssl.keystore.key = null
schema-registry-1  | 	ssl.keystore.location = null
schema-registry-1  | 	ssl.keystore.password = null
schema-registry-1  | 	ssl.keystore.type = JKS
schema-registry-1  | 	ssl.protocol = TLSv1.3
schema-registry-1  | 	ssl.provider = null
schema-registry-1  | 	ssl.secure.random.implementation = null
schema-registry-1  | 	ssl.trustmanager.algorithm = PKIX
schema-registry-1  | 	ssl.truststore.certificates = null
schema-registry-1  | 	ssl.truststore.location = null
schema-registry-1  | 	ssl.truststore.password = null
schema-registry-1  | 	ssl.truststore.type = JKS
schema-registry-1  | 	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
schema-registry-1  |  (org.apache.kafka.clients.consumer.ConsumerConfig)
schema-registry-1  | [2025-05-11 15:40:35,355] INFO Kafka version: 7.4.0-ce (org.apache.kafka.common.utils.AppInfoParser)
schema-registry-1  | [2025-05-11 15:40:35,355] INFO Kafka commitId: aee97a585bd06866 (org.apache.kafka.common.utils.AppInfoParser)
schema-registry-1  | [2025-05-11 15:40:35,355] INFO Kafka startTimeMs: 1746978035355 (org.apache.kafka.common.utils.AppInfoParser)
schema-registry-1  | [2025-05-11 15:40:35,359] INFO [Consumer clientId=KafkaStore-reader-_schemas, groupId=schema-registry-schema-registry-8081] Cluster ID: xZizC8z6SJWtwCsWVDlToA (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,361] INFO [Consumer clientId=KafkaStore-reader-_schemas, groupId=schema-registry-schema-registry-8081] Assigned to partition(s): _schemas-0 (org.apache.kafka.clients.consumer.KafkaConsumer)
schema-registry-1  | [2025-05-11 15:40:35,363] INFO Seeking to beginning for all partitions (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
schema-registry-1  | [2025-05-11 15:40:35,363] INFO [Consumer clientId=KafkaStore-reader-_schemas, groupId=schema-registry-schema-registry-8081] Seeking to earliest offset of partition _schemas-0 (org.apache.kafka.clients.consumer.internals.SubscriptionState)
schema-registry-1  | [2025-05-11 15:40:35,364] INFO Initialized last consumed offset to -1 (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
schema-registry-1  | [2025-05-11 15:40:35,364] INFO [kafka-store-reader-thread-_schemas]: Starting (io.confluent.kafka.schemaregistry.storage.KafkaStoreReaderThread)
schema-registry-1  | [2025-05-11 15:40:35,380] INFO [Consumer clientId=KafkaStore-reader-_schemas, groupId=schema-registry-schema-registry-8081] Resetting the last seen epoch of partition _schemas-0 to 0 since the associated topicId changed from null to rq1aUlHWS4WQLJC682VJOg (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,430] INFO [Producer clientId=producer-1] Resetting the last seen epoch of partition _schemas-0 to 0 since the associated topicId changed from null to rq1aUlHWS4WQLJC682VJOg (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,499] INFO Wait to catch up until the offset at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
schema-registry-1  | [2025-05-11 15:40:35,538] INFO Reached offset at 0 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
schema-registry-1  | [2025-05-11 15:40:35,538] INFO Joining schema registry with Kafka-based coordination (io.confluent.kafka.schemaregistry.storage.KafkaSchemaRegistry)
schema-registry-1  | [2025-05-11 15:40:35,542] INFO Kafka version: 7.4.0-ce (org.apache.kafka.common.utils.AppInfoParser)
schema-registry-1  | [2025-05-11 15:40:35,542] INFO Kafka commitId: aee97a585bd06866 (org.apache.kafka.common.utils.AppInfoParser)
schema-registry-1  | [2025-05-11 15:40:35,542] INFO Kafka startTimeMs: 1746978035542 (org.apache.kafka.common.utils.AppInfoParser)
schema-registry-1  | [2025-05-11 15:40:35,548] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition _schemas-0 to 0 since the associated topicId changed from null to rq1aUlHWS4WQLJC682VJOg (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,548] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-0 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,548] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-10 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,548] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-20 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,548] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-40 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,548] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-30 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,548] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-9 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,548] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-11 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,548] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-31 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,548] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-39 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,548] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-13 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,548] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-18 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,548] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-22 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,548] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-8 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,548] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-32 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,548] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-43 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,548] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-29 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,548] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-34 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-1 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-6 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-41 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-27 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-48 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-5 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-15 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-35 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-25 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-46 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-26 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-36 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-44 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-16 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-37 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-17 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-45 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-3 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-24 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-38 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-33 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-23 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-28 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-2 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-12 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-19 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-14 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-4 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-47 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-49 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-42 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-7 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,549] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Resetting the last seen epoch of partition __consumer_offsets-21 to 0 since the associated topicId changed from null to 66-cazDVSLSTkkxdLhhgkQ (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,550] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Cluster ID: xZizC8z6SJWtwCsWVDlToA (org.apache.kafka.clients.Metadata)
schema-registry-1  | [2025-05-11 15:40:35,550] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Discovered group coordinator kafka:9092 (id: 2147483646 rack: null) (io.confluent.kafka.schemaregistry.leaderelector.kafka.SchemaRegistryCoordinator)
schema-registry-1  | [2025-05-11 15:40:35,552] INFO [Schema registry clientId=sr-1, groupId=schema-registry] (Re-)joining group (io.confluent.kafka.schemaregistry.leaderelector.kafka.SchemaRegistryCoordinator)
schema-registry-1  | [2025-05-11 15:40:35,567] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Request joining group due to: need to re-join with the given member-id: sr-1-304f2482-b3c6-4787-a642-fdecca2d0416 (io.confluent.kafka.schemaregistry.leaderelector.kafka.SchemaRegistryCoordinator)
schema-registry-1  | [2025-05-11 15:40:35,567] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Request joining group due to: rebalance failed due to 'The group member needs to have a valid member id before actually entering a consumer group.' (MemberIdRequiredException) (io.confluent.kafka.schemaregistry.leaderelector.kafka.SchemaRegistryCoordinator)
schema-registry-1  | [2025-05-11 15:40:35,567] INFO [Schema registry clientId=sr-1, groupId=schema-registry] (Re-)joining group (io.confluent.kafka.schemaregistry.leaderelector.kafka.SchemaRegistryCoordinator)
schema-registry-1  | [2025-05-11 15:40:38,588] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Successfully joined group with generation Generation{generationId=1, memberId='sr-1-304f2482-b3c6-4787-a642-fdecca2d0416', protocol='v0'} (io.confluent.kafka.schemaregistry.leaderelector.kafka.SchemaRegistryCoordinator)
schema-registry-1  | [2025-05-11 15:40:38,620] INFO [Schema registry clientId=sr-1, groupId=schema-registry] Successfully synced group in generation Generation{generationId=1, memberId='sr-1-304f2482-b3c6-4787-a642-fdecca2d0416', protocol='v0'} (io.confluent.kafka.schemaregistry.leaderelector.kafka.SchemaRegistryCoordinator)
schema-registry-1  | [2025-05-11 15:40:38,623] INFO Finished rebalance with leader election result: Assignment{version=1, error=0, leader='sr-1-304f2482-b3c6-4787-a642-fdecca2d0416', leaderIdentity=version=1,host=schema-registry,port=8081,scheme=http,leaderEligibility=true} (io.confluent.kafka.schemaregistry.leaderelector.kafka.KafkaGroupLeaderElector)
schema-registry-1  | [2025-05-11 15:40:38,638] INFO Wait to catch up until the offset at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
schema-registry-1  | [2025-05-11 15:40:38,640] INFO Reached offset at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
schema-registry-1  | [2025-05-11 15:40:38,670] INFO Binding SchemaRegistryRestApplication to all listeners. (io.confluent.rest.Application)
schema-registry-1  | [2025-05-11 15:40:38,727] INFO jetty-9.4.48.v20220622; built: 2022-06-21T20:42:25.880Z; git: 6b67c5719d1f4371b33655ff2d047d24e171e49a; jvm 11.0.18+10-LTS (org.eclipse.jetty.server.Server)
schema-registry-1  | [2025-05-11 15:40:38,752] INFO DefaultSessionIdManager workerName=node0 (org.eclipse.jetty.server.session)
schema-registry-1  | [2025-05-11 15:40:38,752] INFO No SessionScavenger set, using defaults (org.eclipse.jetty.server.session)
schema-registry-1  | [2025-05-11 15:40:38,753] INFO node0 Scavenging every 600000ms (org.eclipse.jetty.server.session)
schema-registry-1  | May 11, 2025 3:40:38 PM org.glassfish.jersey.internal.inject.Providers checkProviderRuntime
schema-registry-1  | WARNING: A provider io.confluent.kafka.schemaregistry.rest.resources.ConfigResource registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider io.confluent.kafka.schemaregistry.rest.resources.ConfigResource will be ignored. 
schema-registry-1  | May 11, 2025 3:40:38 PM org.glassfish.jersey.internal.inject.Providers checkProviderRuntime
schema-registry-1  | WARNING: A provider io.confluent.kafka.schemaregistry.rest.resources.ContextsResource registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider io.confluent.kafka.schemaregistry.rest.resources.ContextsResource will be ignored. 
schema-registry-1  | May 11, 2025 3:40:38 PM org.glassfish.jersey.internal.inject.Providers checkProviderRuntime
schema-registry-1  | WARNING: A provider io.confluent.kafka.schemaregistry.rest.resources.SubjectsResource registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider io.confluent.kafka.schemaregistry.rest.resources.SubjectsResource will be ignored. 
schema-registry-1  | May 11, 2025 3:40:38 PM org.glassfish.jersey.internal.inject.Providers checkProviderRuntime
schema-registry-1  | WARNING: A provider io.confluent.kafka.schemaregistry.rest.resources.SchemasResource registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider io.confluent.kafka.schemaregistry.rest.resources.SchemasResource will be ignored. 
schema-registry-1  | May 11, 2025 3:40:38 PM org.glassfish.jersey.internal.inject.Providers checkProviderRuntime
schema-registry-1  | WARNING: A provider io.confluent.kafka.schemaregistry.rest.resources.SubjectVersionsResource registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider io.confluent.kafka.schemaregistry.rest.resources.SubjectVersionsResource will be ignored. 
schema-registry-1  | May 11, 2025 3:40:38 PM org.glassfish.jersey.internal.inject.Providers checkProviderRuntime
schema-registry-1  | WARNING: A provider io.confluent.kafka.schemaregistry.rest.resources.CompatibilityResource registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider io.confluent.kafka.schemaregistry.rest.resources.CompatibilityResource will be ignored. 
schema-registry-1  | May 11, 2025 3:40:38 PM org.glassfish.jersey.internal.inject.Providers checkProviderRuntime
schema-registry-1  | WARNING: A provider io.confluent.kafka.schemaregistry.rest.resources.ModeResource registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider io.confluent.kafka.schemaregistry.rest.resources.ModeResource will be ignored. 
schema-registry-1  | May 11, 2025 3:40:38 PM org.glassfish.jersey.internal.inject.Providers checkProviderRuntime
schema-registry-1  | WARNING: A provider io.confluent.kafka.schemaregistry.rest.resources.ServerMetadataResource registered in SERVER runtime does not implement any provider interfaces applicable in the SERVER runtime. Due to constraint configuration problems the provider io.confluent.kafka.schemaregistry.rest.resources.ServerMetadataResource will be ignored. 
schema-registry-1  | [2025-05-11 15:40:39,009] INFO HV000001: Hibernate Validator 6.1.7.Final (org.hibernate.validator.internal.util.Version)
schema-registry-1  | [2025-05-11 15:40:39,162] INFO Started o.e.j.s.ServletContextHandler@6a4ccef7{/,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
schema-registry-1  | [2025-05-11 15:40:39,178] INFO Started o.e.j.s.ServletContextHandler@11a8042c{/ws,null,AVAILABLE} (org.eclipse.jetty.server.handler.ContextHandler)
schema-registry-1  | [2025-05-11 15:40:39,187] INFO Started NetworkTrafficServerConnector@74eb909f{HTTP/1.1, (http/1.1, h2c)}{0.0.0.0:8081} (org.eclipse.jetty.server.AbstractConnector)
schema-registry-1  | [2025-05-11 15:40:39,188] INFO Started @5083ms (org.eclipse.jetty.server.Server)
schema-registry-1  | [2025-05-11 15:40:39,188] INFO Schema Registry version: 7.4.0 commitId: 5698e3eec470f7e395341858f6a8f3d9d0629073 (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
schema-registry-1  | [2025-05-11 15:40:39,188] INFO Server started, listening for requests... (io.confluent.kafka.schemaregistry.rest.SchemaRegistryMain)
schema-registry-1  | [2025-05-11 15:41:07,876] INFO Registering new schema: subject users-avro-value, version null, id null, type null, schema size 207 (io.confluent.kafka.schemaregistry.rest.resources.SubjectVersionsResource)
schema-registry-1  | [2025-05-11 15:41:07,917] INFO Wait to catch up until the offset at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
schema-registry-1  | [2025-05-11 15:41:07,917] INFO Reached offset at 1 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
schema-registry-1  | [2025-05-11 15:41:07,931] INFO Wait to catch up until the offset at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
schema-registry-1  | [2025-05-11 15:41:07,945] INFO Reached offset at 2 (io.confluent.kafka.schemaregistry.storage.KafkaStore)
schema-registry-1  | [2025-05-11 15:41:07,968] INFO 192.168.65.1 - - [11/May/2025:15:41:07 +0000] "POST /subjects/users-avro-value/versions HTTP/1.1" 200 8 "-" "python-requests/2.32.3" 212 (io.confluent.rest-utils.requests)
